脑子笨,没想到什么好方法
但是搞出来个偏方AC了
是这样的，如果判别一个数是否humble，那么好办
只需要让他不断除掉2-3-5-7（不能有余数），直到不能除，如果最后是1，那么它就是humble
那么容易想到，只要从一开始直到第XXXX个逐个检查，是humble数则存到一个表里面，要的时候再查这个表，那就行了
不过这个算法复杂度无疑是很大的，也就是它笨的地方，不过从test case里面可以看到
The 5842nd humble number is 2000000000.
那么就是说，最复杂也就算2000000000次，就可以把这个表算出来。
我是想不到什么聪明的办法
于是先用一个程序，用笨的办法生成了这个表到一个文件（这大概费了两到三分钟，因此必须先算了）
然后把这个表贴到另一个文件里面，这样效率就高了，顶多也就是费储存空间，long[5842]也不算大
因此，另一个文件里就相当于天生就有这个表了，那一查就出来了

至于st,nd,rd的话：
先让n整除100,如果是11-12-13的话，应该是'th'
else if整除10，如果是1-2-3，相应输出'st','nd','rd'
else，那就是th咯，这个简单

但是这方法的确不聪明，省的只是脑子